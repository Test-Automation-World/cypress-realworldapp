name: Run tests

on:
  workflow_dispatch:

env:
  PORT: 3001
  JWT_KEY: supersecretkey
  DEV_DB_USERNAME: postgres
  DEV_DB_PASSWORD: postgres
  DEV_DB_NAME: db_dev
  DEV_DB_HOSTNAME: 127.0.0.1
  DEV_DB_DIALECT: postgres
  DEV_DB_LOGGGIN: true

jobs:
  test:
    name: Spin up application to run tests
    
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: db_dev
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    - name: Install dependencies
      run: npm install

    # - name: Create PostgreSQL Database
    #  run: npm run sqlz -- db:create

    - name: Start aplication
      run: npm run dev

    - name: Wait for back and front to be available
      run: |
        wait-for-it -t 0 localhost:3000 -- echo "Frontend is ready" &&
        wait-for-it -t 0 localhost:3001 -- echo "Backend is ready"

    - name: Run Tests
      run: npm test
